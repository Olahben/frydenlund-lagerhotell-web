@using System.Text
@using System.Text.Json
@using LagerhotellAPI.Models
@using LagerhotellAPI.Models.ValueTypes;
@inject AppState _appState

@inject NavigationManager _navigationManager
@inject AuthenticationStateProvider _authenticationStateProvider
@inject OrderService _orderService
@inject CompanyUserService _companyUserService
@inject SessionService _sessionService
@inject AuthStateProviderService _customAuthStateProvider
@inject IConfiguration _configuration
@inject Auth0Service _auth0Service
@inject IDialogService _dialogService

@page "/user/{userId}"

<style>
    .active-tab {
        font-weight: bold;
        background-color: #f0f0f0;
        border-left: 4px solid #6200ea;
    }

    .hover-effect {
        transition: background-color 0.3s ease;
    }

        .hover-effect:hover {
            background-color: #f0f0f0;
        }
</style>

@if (isInitialized)
{
    <CascadingAuthenticationState>
        <AuthorizeView>
            <NotAuthorized>
                Unauthorized
            </NotAuthorized>
            <Authorized>
                <MudContainer Style="width: 100%; margin-top: 26px; margin-bottom: 48px;">
                    <MudGrid Style="justify-content: center; max-width: 1100px;">
                        <MudItem xs="12" md="3">
                            <MudPaper Elevation="1">
                                <MudList T="string">
                                    @if (activeTab == "profil")
                                    {
                                        <MudListItem Class="active-tab">
                                            <MudIcon Icon="@Icons.Material.Filled.AccountCircle" style="vertical-align: middle;" />
                                            <span style="vertical-align: middle; margin-left: 8px;">Profil</span>
                                        </MudListItem>
                                    }
                                    else
                                    {
                                        <MudListItem Style="cursor: pointer;" Class="hover-effect" @onclick='() => SetActiveTab("profil")'>
                                            <MudIcon Icon="@Icons.Material.Filled.AccountCircle" style="vertical-align: middle;" />
                                            <span style="vertical-align: middle; margin-left: 8px;">Profil</span>
                                        </MudListItem>
                                    }
                                    @if (activeTab == "Bestillinger")
                                    {
                                        <MudListItem Class="active-tab">
                                            <MudIcon Icon="@Icons.Material.Filled.ShoppingBasket" style="vertical-align: middle;" />
                                            <span style="vertical-align: middle; margin-left: 8px;">Bestillinger</span>
                                        </MudListItem>
                                    }
                                    else
                                    {
                                        <MudListItem Style="cursor: pointer;" Class="hover-effect" @onclick='() => SetActiveTab("Bestillinger")'>
                                            <MudIcon Icon="@Icons.Material.Filled.ShoppingBasket" style="vertical-align: middle;" />
                                            <span style="vertical-align: middle; margin-left: 8px;">Bestillinger</span>
                                        </MudListItem>
                                    }
                                    <AuthorizeView Roles="Administrator">
                                        <Authorized Context="n">
                                            @if (activeTab == "AdminBestillinger")
                                            {
                                                <MudListItem Class="active-tab">
                                                    <MudIcon Icon="@Icons.Material.Filled.AdminPanelSettings" style="vertical-align: middle;" />
                                                    <span style="vertical-align: middle; margin-left: 8px;">Bestillinger (Admin)</span>
                                                </MudListItem>
                                            }
                                            else
                                            {
                                                <MudListItem Style="cursor: pointer;" Class="hover-effect" @onclick='() => SetActiveTab("AdminBestillinger")'>
                                                    <MudIcon Icon="@Icons.Material.Filled.AdminPanelSettings" style="vertical-align: middle;" />
                                                    <span style="vertical-align: middle; margin-left: 8px;">Bestillinger (Admin)</span>
                                                </MudListItem>
                                            }
                                            @if (activeTab == "AdminBrukere")
                                            {
                                                <MudListItem Class="active-tab">
                                                    <MudIcon Icon="@Icons.Material.Filled.AdminPanelSettings" style="vertical-align: middle;" />
                                                    <span style="vertical-align: middle; margin-left: 8px;">Brukere (Admin)</span>
                                                </MudListItem>
                                            }
                                            else
                                            {
                                                <MudListItem Style="cursor: pointer;" Class="hover-effect" @onclick='() => SetActiveTab("AdminBrukere")'>
                                                    <MudIcon Icon="@Icons.Material.Filled.AdminPanelSettings" style="vertical-align: middle;" />
                                                    <span style="vertical-align: middle; margin-left: 8px;">Brukere (Admin)</span>
                                                </MudListItem>
                                            }
                                            @if (activeTab == "AdminFirmabrukere")
                                            {
                                                <MudListItem Class="active-tab">
                                                    <MudIcon Icon="@Icons.Material.Filled.AdminPanelSettings" style="vertical-align: middle;" />
                                                    <span style="vertical-align: middle; margin-left: 8px;">Firmabrukere (Admin)</span>
                                                </MudListItem>
                                            }
                                            else
                                            {
                                                <MudListItem Style="cursor: pointer;" Class="hover-effect" @onclick='() => SetActiveTab("AdminFirmabrukere")'>
                                                    <MudIcon Icon="@Icons.Material.Filled.AdminPanelSettings" style="vertical-align: middle;" />
                                                    <span style="vertical-align: middle; margin-left: 8px;">Firmabrukere (Admin)</span>
                                                </MudListItem>
                                            }
                                            @if (activeTab == "AdminBoder")
                                            {
                                                <MudListItem Class="active-tab">
                                                    <MudIcon Icon="@Icons.Material.Filled.AdminPanelSettings" style="vertical-align: middle;" />
                                                    <span style="vertical-align: middle; margin-left: 8px;">Boder (Admin)</span>
                                                </MudListItem>
                                            }
                                            else
                                            {
                                                <MudListItem Style="cursor: pointer;" Class="hover-effect" @onclick='() => SetActiveTab("AdminBoder")'>
                                                    <MudIcon Icon="@Icons.Material.Filled.AdminPanelSettings" style="vertical-align: middle;" />
                                                    <span style="vertical-align: middle; margin-left: 8px;">Boder (Admin)</span>
                                                </MudListItem>
                                            }
                                        </Authorized>
                                    </AuthorizeView>

                                </MudList>
                            </MudPaper>
                        </MudItem>
                        @if (activeTab == "profil")
                        {
                            @if (isCompanyUser)
                            {
                                <MudItem xs="12" md="9">
                                    <MudPaper Elevation="1" Class="pa-4">
                                        <MudText Typo="Typo.h6">Profil</MudText>
                                        <MudText Typo="Typo.subtitle1">Velkommen, @companyUser.Name!</MudText>
                                        <MudDivider Class="my-4" />
                                        <div class="d-flex align-items-center">
                                            @if (!string.IsNullOrEmpty(companyUser?.Name))
                                            {
                                                <MudAvatar Color="Color.Primary" Src="path_to_image.jpg">@companyUser.FirstName.Substring(0, 1)</MudAvatar>
                                            }
                                            <div class="ml-2">
                                                <MudText Typo="Typo.subtitle1"><MudText Style=" font-weight:780; display:inline">@companyUser.FirstName</MudText> @companyUser.LastName</MudText>
                                            </div>
                                        </div>
                                        @if (_editMode)
                                        {
                                            <MudButton Style="margin-top: 16px; margin-bottom: 22px;" Variant="Variant.Filled" @onclick=ToggleEditMode>Kanseller endringer</MudButton>
                                        }
                                        else
                                        {
                                            <MudButton Style="margin-top: 16px; margin-bottom: 22px;" Variant="Variant.Filled" @onclick=ToggleEditMode>Endre</MudButton>
                                            <MudButton Style="margin-top: 16px; margin-bottom: 22px; margin-left: 12px;" @onclick="ShowResetPasswordComponents" Variant="Variant.Filled">Endre Passord</MudButton>
                                        }
                                        @if (_editMode)
                                        {
                                            @if (_editPasswordMode)
                                            {
                                                <MudText Typo="Typo.h6" Style="font-size: 24px;">Endre passord</MudText>
                                                <ResetPasswordForm UserId="@UserId" OnPasswordResetDone="ToggleEditMode" />
                                            }
                                            else
                                            {
                                                <MudForm @ref="companyUserForm" Model="updatedCompanyUser" Validation="@(companyUserValidator.ValidateValue)">
                                                    <MudText Typo="Typo.h6" Style="font-size: 24px;">Kontaktinformasjon</MudText>
                                                    <MudTextField Style="margin-bottom: 10px;" Label="Firma" @bind-Value="updatedCompanyUser.Name" Variant="Variant.Outlined" For="@(() => updatedCompanyUser.Name)" Immediate="true"></MudTextField>
                                                    <MudTextField Style="margin-bottom: 10px;" Label="Kontaktperson fornavn" @bind-Value="updatedCompanyUser.FirstName" Variant="Variant.Outlined" For="@(() => updatedCompanyUser.FirstName)" Immediate="true"></MudTextField>
                                                    <MudTextField Style="margin-bottom: 10px;" Label="Kontaktperson etternavn" @bind-Value="updatedCompanyUser.LastName" Variant="Variant.Outlined" For="@(() => updatedCompanyUser.LastName)" Immediate="true"></MudTextField>
                                                    <MudTextField Style="margin-bottom: 10px;" Label="Organisasjonsnummer" @bind-Value="updatedCompanyUser.CompanyNumber" Variant="Variant.Outlined" For="@(() => updatedCompanyUser.CompanyNumber)" Immediate="true"></MudTextField>
                                                    @*Disabled temporarily*@
                                                    <MudTextField Style="margin-bottom: 10px;" Disabled="true" Label="E-post" @bind-Value="updatedCompanyUser.Email" Variant="Variant.Outlined" For="@(() => updatedCompanyUser.Email)" Immediate="true"></MudTextField>
                                                    <MudTextField Style="margin-bottom: 10px;" Disabled="true" Label="Telefonnummer" @bind-Value="updatedCompanyUser.PhoneNumber" Variant="Variant.Outlined" For="@(() => updatedCompanyUser.PhoneNumber)" Immediate="true"></MudTextField>
                                                    <MudText Typo="Typo.h6" Style="font-size: 24px;">Adresse</MudText>
                                                    <MudTextField Style="margin-bottom: 10px;" Label="Adresse" @bind-Value="updatedCompanyUser.Address.StreetAddress" Variant="Variant.Outlined" For="@(() => updatedCompanyUser.Address.StreetAddress)" Immediate="true"></MudTextField>
                                                    <MudTextField Style="margin-bottom: 10px;" Label="Postnummer" @bind-Value="updatedCompanyUser.Address.PostalCode" Variant="Variant.Outlined" For="@(() => updatedCompanyUser.Address.PostalCode)" Immediate="true"></MudTextField>
                                                    <MudTextField Style="margin-bottom: 10px;" Label="Poststed" @bind-Value="updatedCompanyUser.Address.City" Variant="Variant.Outlined" For="@(() => updatedCompanyUser.Address.City)" Immediate="true"></MudTextField>
                                                </MudForm>
                                            }
                                        }
                                        else
                                        {
                                            <MudText Typo="Typo.h6" Style="font-size: 24px;">Kontaktinformasjon</MudText>
                                            <MudTextField Style="margin-bottom: 10px;" Label="Firma" @bind-Value="companyUser.Name" Disabled="true" Variant="Variant.Outlined"></MudTextField>
                                            <MudTextField Style="margin-bottom: 10px;" Label="Kontaktperson fornavn" @bind-Value="companyUser.FirstName" Disabled="true" Variant="Variant.Outlined"></MudTextField>
                                            <MudTextField Style="margin-bottom: 10px;" Label="Kontaktperson etternavn" @bind-Value="companyUser.LastName" Disabled="true" Variant="Variant.Outlined"></MudTextField>
                                            <MudTextField Style="margin-bottom: 10px;" Label="Organisasjonsnummer" @bind-Value="companyUser.CompanyNumber" Disabled="true" Variant="Variant.Outlined"></MudTextField>
                                            <MudTextField Style="margin-bottom: 10px;" Label="E-post" @bind-Value="companyUser.Email" Disabled="true" Variant="Variant.Outlined"></MudTextField>
                                            <MudTextField Style="margin-bottom: 10px;" Label="Telefonnummer" @bind-Value="companyUser.PhoneNumber" Disabled="true" Variant="Variant.Outlined"></MudTextField>
                                            <MudText Typo="Typo.h6" Style="font-size: 24px;">Adresse</MudText>
                                            <MudTextField Style="margin-bottom: 10px;" Label="Adresse" @bind-Value="companyUser.Address.StreetAddress" Disabled="true" Variant="Variant.Outlined"></MudTextField>
                                            <MudTextField Style="margin-bottom: 10px;" Label="Postnummer" @bind-Value="companyUser.Address.PostalCode" Disabled="true" Variant="Variant.Outlined"></MudTextField>
                                            <MudTextField Style="margin-bottom: 10px;" Label="Poststed" @bind-Value="companyUser.Address.City" Disabled="true" Variant="Variant.Outlined"></MudTextField>
                                        }
                                        @if (!_editPasswordMode)
                                        {
                                            <MudButton OnClick="Logout" Variant="Variant.Filled" Color="Color.Primary" Style="color: white; margin-right: 6px;" EndIcon="@Icons.Material.Filled.Logout">Logg ut</MudButton>
                                            <MudButton OnClick="OpenDeleteUserDialog" Variant="Variant.Filled" Color="Color.Error" Style="color: white;" EndIcon="@Icons.Material.Filled.DeleteForever">Slett bruker</MudButton>
                                        }
                                        @if (_editMode)
                                        {
                                            @if (!_editPasswordMode)
                                            {
                                                <MudButton ButtonType="ButtonType.Button" Style="margin-left: 12px;" OnClick="@((e) => UpdateCompanyUserValues())" Variant="Variant.Filled" Color="Color.Primary">Lagre endringer</MudButton>
                                            }
                                        }
                                    </MudPaper>
                                </MudItem>
                            }
                            else
                            {
                                <MudItem xs="12" md="9">
                                    <MudPaper Elevation="1" Class="pa-4">
                                        <MudText Typo="Typo.h6">Profil</MudText>
                                        <MudText Typo="Typo.subtitle1">Velkommen, @_userValues.FirstName!</MudText>
                                        <MudDivider Class="my-4" />
                                        <div style="margin-bottom: 16px;" class="d-flex align-items-center">
                                            @if (!string.IsNullOrEmpty(_userValues?.FirstName))
                                            {
                                                <MudAvatar Color="Color.Primary" Src="path_to_image.jpg">@_userValues.FirstName.Substring(0, 1)</MudAvatar>
                                            }
                                            <div class="ml-2">
                                                <MudText Typo="Typo.subtitle1"><MudText Style=" font-weight:780; display:inline">@_userValues.FirstName</MudText> @_userValues.LastName</MudText>
                                            </div>
                                        </div>
                                        <div Style="height: 8px"></div>
                                        @if (_editMode)
                                        {
                                            <MudButton Variant="Variant.Filled" @onclick=ToggleEditMode>Kanseller endringer</MudButton>
                                        }
                                        else
                                        {
                                            <MudButton Variant="Variant.Filled" @onclick=ToggleEditMode>Endre</MudButton>
                                            <MudButton Style="margin-left: 6px;" @onclick="ShowResetPasswordComponents" Variant="Variant.Filled">Endre Passord</MudButton>
                                        }
                                        <div style="height:10px"></div>
                                        @if (_editMode)
                                        {
                                            @if (_editPasswordMode)
                                            {
                                                <MudText Typo="Typo.h6" Style="font-size: 24px;">Endre passord</MudText>
                                                <ResetPasswordForm UserId="@UserId" OnPasswordResetDone="ToggleEditMode" />
                                            }
                                            else
                                            {
                                                <MudForm Model="@_userValues" @ref="_form">
                                                    <MudText Typo="Typo.h6" Style="font-size: 24px;">Kontaktinformasjon</MudText>
                                                    <MudTextField Style="margin-bottom: 10px;" Label="Fornavn" @bind-Value="_userValues.FirstName" For="@(() => _userValues.FirstName)" Immediate="true" Variant="Variant.Outlined"></MudTextField>
                                                    <MudTextField Style="margin-bottom: 10px;" Label="Etternavn" @bind-Value="_userValues.LastName" For="@(() => _userValues.LastName)" Immediate="true" Variant="Variant.Outlined"></MudTextField>
                                                    <MudTextField Style="margin-bottom: 10px;" Label="Mobilnummer" @bind-Value="_userValues.PhoneNumber" For="@(() => _userValues.PhoneNumber)" Disabled="true" Immediate="true" Variant="Variant.Outlined"></MudTextField>
                                                    <MudTextField Style="margin-bottom: 10px;" Label="E-post" @bind-Value="_userValues.Email" For="@(() => _userValues.Email)" Immediate="true" Disabled="true" Variant="Variant.Outlined"></MudTextField>
                                                    <MudTextField Style="margin-bottom: 10px;"
                                                                  Label="Fødselsdato"
                                                                  @bind-Value="_birthDateString"
                                                                  Immediate="true"
                                                                  Variant="Variant.Outlined"
                                                                  For="@(() => _userValues.BirthDate)">
                                                    </MudTextField>
                                                    <MudText Typo="Typo.h6" Style="font-size: 24px;">Adresse</MudText>
                                                    <MudTextField Style="margin-bottom: 10px;" Label="Adresse" @bind-Value="_userValues.StreetAddress" For="@(() => _userValues.StreetAddress)" Immediate="true" Variant="Variant.Outlined"></MudTextField>
                                                    <MudTextField Style="margin-bottom: 10px;" Label="Postnummer" @bind-Value="_userValues.PostalCode" For="@(() => _userValues.PostalCode)" Immediate="true" Variant="Variant.Outlined"></MudTextField>
                                                    <MudTextField Style="margin-bottom: 10px;" Label="Poststed" @bind-Value="_userValues.City" For="@(() => _userValues.City)" Immediate="true" Variant="Variant.Outlined"></MudTextField>
                                                    <MudButton ButtonType="ButtonType.Button" OnClick="@((e) => SaveUserValues())" Variant="Variant.Filled" Color="Color.Primary">Lagre endringer</MudButton>
                                                </MudForm>
                                            }
                                        }
                                        else
                                        {
                                            <MudText Typo="Typo.h6" Style="font-size: 24px;">Kontaktinformasjon</MudText>
                                            <MudTextField Style="margin-bottom: 10px;" Label="Fornavn" @bind-Value="_userValues.FirstName" Disabled="true" Variant="Variant.Outlined"></MudTextField>
                                            <MudTextField Style="margin-bottom: 10px;" Label="Etternavn" @bind-Value="_userValues.LastName" Disabled="true" Variant="Variant.Outlined"></MudTextField>
                                            <MudTextField Style="margin-bottom: 10px;" Label="Mobilnummer" @bind-Value="_userValues.PhoneNumber" Disabled="true" Variant="Variant.Outlined"></MudTextField>
                                            <MudTextField Style="margin-bottom: 10px;" Label="E-post" @bind-Value="_userValues.Email" Disabled="true" Variant="Variant.Outlined"></MudTextField>
                                            <MudTextField Style="margin-bottom: 10px;" Label="Fødselsdato" @bind-Value="_birthDateString" Disabled="true" Variant="Variant.Outlined"></MudTextField>
                                            <MudText Typo="Typo.h6" Style="font-size: 24px;">Adresse</MudText>
                                            <MudTextField Style="margin-bottom: 10px;" Label="Adresse" @bind-Value="_userValues.StreetAddress" Disabled="true" Variant="Variant.Outlined"></MudTextField>
                                            <MudTextField Style="margin-bottom: 10px;" Label="Postnummer" @bind-Value="_userValues.PostalCode" Disabled="true" Variant="Variant.Outlined"></MudTextField>
                                            <MudTextField Style="margin-bottom: 10px;" Label="Poststed" @bind-Value="_userValues.City" Disabled="true" Variant="Variant.Outlined"></MudTextField>
                                        }
                                        @if (!_editPasswordMode)
                                        {
                                            <MudButton OnClick="Logout" Variant="Variant.Filled" Color="Color.Primary" Style="color: white; margin-right: 6px;" EndIcon="@Icons.Material.Filled.Logout">Logg ut</MudButton>
                                            <MudButton OnClick="OpenDeleteUserDialog" Variant="Variant.Filled" Color="Color.Error" Style="color: white;" EndIcon="@Icons.Material.Filled.DeleteForever">Slett bruker</MudButton>
                                        }
                                    </MudPaper>
                                </MudItem>
                            }
                        }
                        else if (activeTab == "Bestillinger")
                        {
                            <MudItem xs="12" md="9">
                                <MudPaper Elevation="1" Class="pa-4">
                                    <UserOrders />
                                </MudPaper>
                            </MudItem>
                        }
                        else if (activeTab == "AdminBestillinger")
                        {
                            <MudItem xs="12" md="9">
                                <MudPaper Elevation="0" Class="pa-4">
                                    <Lagerhotell.Pages.UserSettings.Admin.UserOrdersAdminView />
                                </MudPaper>
                            </MudItem>
                        }
                        else if (activeTab == "AdminBrukere")
                        {
                            <MudItem xs="12" md="9">
                                <MudPaper Elevation="0" Class="pa-4">
                                    <Lagerhotell.Pages.UserSettings.Admin.UsersAdminView />
                                </MudPaper>
                            </MudItem>
                        }
                        else if (activeTab == "AdminFirmabrukere")
                        {
                            <MudItem xs="12" md="9">
                                <MudPaper Elevation="0" Class="pa-4">
                                    <Lagerhotell.Pages.UserSettings.Admin.CompanyUsersAdminView />
                                </MudPaper>
                            </MudItem>
                        }
                        else if (activeTab == "AdminBoder")
                        {
                            <MudItem xs="12" md="9">
                                <MudPaper Elevation="0" Class="pa-4">
                                    <Lagerhotell.Pages.UserSettings.Admin.StorageUnitsAdminView />
                                </MudPaper>
                            </MudItem>
                        }
                    </MudGrid>
                </MudContainer>
            </Authorized>
        </AuthorizeView>
    </CascadingAuthenticationState>
}




@inject HttpClient Http
@inject SessionService sessionService
@inject ISnackbar snackBar

@code {
    private bool isInitialized = false;
    private static readonly HttpClient client = new HttpClient();
    [Parameter] public string UserId { get; set; }
    private UserServiceUserSettings _userServiceUserSettings = new();
    private UserValues _userValues = new();
    private bool _showPassword = false;
    InputType PasswordInput = InputType.Password;
    string PasswordInputIcon = Icons.Material.Filled.VisibilityOff;
    bool isShow;
    private MudForm _form;
    [Inject]
    protected AuthenticationStateProvider AuthenticationStateProvider { get; set; }
    private string activeTab = "profil";

    private string _birthDateString
    {
        get => DateTime.TryParse(_userValues.BirthDate, out var date)
            ? date.ToString("dd.MM.yyyy")
            : string.Empty;
        set
        {
            if (DateTime.TryParseExact(
                value,
                "dd.MM.yyyy",
                System.Globalization.CultureInfo.InvariantCulture,
                System.Globalization.DateTimeStyles.None,
                out var parsedDate))
            {
                _userValues.BirthDate = parsedDate.ToString("yyyy-MM-dd");
            }
        }
    }

    private bool _editMode = false;
    private bool _editPasswordMode = false;

    private CompanyUser updatedCompanyUser = new();
    private bool isCompanyUser = false;
    private CompanyUser companyUser;
    private CompanyUserValidator companyUserValidator = new();
    MudForm companyUserForm = new MudForm();

    public class UserValues
    {
        public string Id { get; set; } = string.Empty;

        [Required(ErrorMessage = "Ett fornavn er obligatorisk")]
        [StringLength(36, ErrorMessage = "Maks 36 bokstaver, minimum 2", MinimumLength = 2)]
        public string FirstName { get; set; } = string.Empty;

        [Required(ErrorMessage = "Ett etternavn er obligatorisk")]
        [StringLength(112, ErrorMessage = "Maks 112 bokstaver, minimum 2", MinimumLength = 2)]
        public string LastName { get; set; } = string.Empty;

        [UserServiceSignup.ContainsOnlyNumbers(ErrorMessage = "Telefonnummeret ditt kan bare inneholde tall")]
        [Required(ErrorMessage = "Ett telefonnummer er obligatorisk")]
        [StringLength(8, ErrorMessage = "Nummeret må være norskt, åtte siffer", MinimumLength = 8)]
        public string PhoneNumber { get; set; } = string.Empty;

        [Required(ErrorMessage = "An email is required")]
        [EmailAddress(ErrorMessage = "Invalid email format")]
        public string Email { get; set; } = string.Empty;

        [Required(ErrorMessage = "En fødselsdato er obligatorisk")]
        [UserServiceSignup.IsOverLegalAge(ErrorMessage = "Du må være over 18 år")]
        public string BirthDate { get; set; } = string.Empty;

        [UserServiceSignup.ContainsNumber(ErrorMessage = "Passordet ditt må ha minst ett tall")]
        [Required(ErrorMessage = "Ett passord er obligatorisk")]
        [StringLength(48, ErrorMessage = "Maks 48 tall eller bokstaver, minimum seks", MinimumLength = 8)]
        public string Password { get; set; } = string.Empty;

        [Required(ErrorMessage = "Du må repetere passordet ditt")]
        [Compare(nameof(Password), ErrorMessage = "Passordene samstemmer ikke")]
        public string PasswordRepeat { get; set; } = string.Empty;

        [StringLength(112, ErrorMessage = "Addressen din kan være 2-112 bokstaver/tall lang")]
        [Required(ErrorMessage = "En addresse er obligatorisk")]
        [UserServiceSignup.ContainsNumbersAndLetters(ErrorMessage = "Dette feltet må inneholde bokstaver og tall")]
        public string StreetAddress { get; set; } = string.Empty;

        [Required(ErrorMessage = "Dette feltet er obligatorisk")]
        [StringLength(4, ErrorMessage = "Dette må inneholde fire siffer", MinimumLength = 4)]
        public string PostalCode { get; set; } = string.Empty;

        [Required(ErrorMessage = "Dette feltet er obligatorisk")]
        [StringLength(140, ErrorMessage = "Dette feltet må være 2-140 bokstaver langt")]
        [UserServiceSignup.ContainsOnlyLetters(ErrorMessage = "Dette feltet kan bare inneholde bokstaver")]
        public string City { get; set; } = string.Empty;

        public bool IsAdministrator { get; set; }
    }

    protected override async Task OnInitializedAsync()
    {
        string token = await sessionService.GetJwtFromLocalStorage();
        // Checks if UserId in the URL is the same as the UserId in the accesstoken
        var userOrCompanyUser = await _customAuthStateProvider.GetUser();
        string userIdViaAccessToken;
        if (userOrCompanyUser.User.FirstName != null)
        {
            userIdViaAccessToken = userOrCompanyUser.User.Id;
        }
        else
        {
            userIdViaAccessToken = userOrCompanyUser.CompanyUser.CompanyUserId;
        }
        if (userIdViaAccessToken == null)
        {
            _navigationManager.NavigateTo("/");
        }
        if (string.IsNullOrEmpty(UserId) || UserId != userIdViaAccessToken)
        {
            UserId = userIdViaAccessToken;
            _navigationManager.NavigateTo($"/user/{UserId}");
        }
        try
        {
            var user = await _userServiceUserSettings.LoadUser(client, _userValues, UserId, token);
            if (user != null)
            {
                _userValues.FirstName = user.FirstName;
                _userValues.LastName = user.LastName;
                _userValues.PhoneNumber = user.PhoneNumber;
                _userValues.BirthDate = user.BirthDate;
                _userValues.StreetAddress = user.StreetAddress;
                _userValues.PostalCode = user.PostalCode;
                _userValues.City = user.City;
                _userValues.Password = user.Password;
                _userValues.PasswordRepeat = user.Password;
                _userValues.IsAdministrator = user.IsAdministrator;
                _userValues.Email = user.Email;
                _birthDateString = user.BirthDate;
                isInitialized = true;
            }
            else
            {
                snackBar.Add("Kunne ikke laste inn brukeren", MudBlazor.Severity.Error);
            }
        }
        catch (KeyNotFoundException e)
        {
            try
            {
                var user = await _companyUserService.GetCompanyUserAsync(UserId);
                updatedCompanyUser = user;
                companyUser = user;
                isCompanyUser = true;
                isInitialized = true;
            }
            catch (KeyNotFoundException)
            {
                Snackbar.Add("Fant ikke brukeren", MudBlazor.Severity.Error);
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex);
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex);
            snackBar.Add("Kunne ikke laste inn brukeren", MudBlazor.Severity.Error);
        }
        StateHasChanged();
    }

    private async Task UpdateCompanyUserValues()
    {
        await companyUserForm.Validate();
        if (!companyUserForm.IsValid)
        {
            snackBar.Add("Skjemaet er ikke gyldig", MudBlazor.Severity.Error);
            return;
        }
        try
        {
            await _companyUserService.UpdateCompanyUserAsync(updatedCompanyUser);
            snackBar.Add("Dine data ble oppdatert", MudBlazor.Severity.Success);
            ToggleEditMode();
            companyUser = updatedCompanyUser;
        }
        catch (KeyNotFoundException)
        {
            Snackbar.Add("Fant ikke brukeren", MudBlazor.Severity.Error);
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex);
            snackBar.Add("Kunne ikke laste inn brukeren, vennligst sjekk feilmeldinger på feltene", MudBlazor.Severity.Error);
        }
    }

    public void ToggleEditMode()
    {
        if (_editPasswordMode)
        {
            _editPasswordMode = false;
        }
        _editMode = !_editMode;
        StateHasChanged();
    }

    private void ShowResetPasswordComponents()
    {
        ToggleEditMode();
        TogglePasswordEditMode();
        StateHasChanged();
    }

    void TogglePasswordVisibility()
    {
        if (isShow)
        {
            isShow = false;
            PasswordInputIcon = Icons.Material.Filled.VisibilityOff;
            PasswordInput = InputType.Password;
        }
        else
        {
            isShow = true;
            PasswordInputIcon = Icons.Material.Filled.Visibility;
            PasswordInput = InputType.Text;
        }
    }

    private async Task<bool> Validate()
    {
        await _form.Validate();

        if (!_form.IsValid)
        {
            snackBar.Add("Skjemaet er ikke gyldig", MudBlazor.Severity.Error);
            return false;
        }

        return true;
    }

    public async Task? SaveUserValues()
    {
        if (await Validate())
        {
            string token = await sessionService.GetJwtFromLocalStorage();
            // The form is valid, proceed with the save operation
            await _userServiceUserSettings.UpdateUserValues(client, _userValues, token);
            // Show a success message
            snackBar.Add("Dine data ble oppdatert", MudBlazor.Severity.Success);
            ToggleEditMode();
            StateHasChanged();
        }

    }

    private async void Logout()
    {
        await sessionService.LogUserOut();
        await _authenticationStateProvider.GetAuthenticationStateAsync();
        StateHasChanged();
        _navigationManager.NavigateTo($"{_configuration["Auth0:Authority"]}/v2/logout?client_id={_configuration["Auth0:ClientId"]}&returnTo={_configuration["HostSettings:HostUrl"]}");
    }

    private void OpenDeleteUserDialog()
    {
        _dialogService.Show<Lagerhotell.Pages.UserSettings.ConfirmDeleteUser>("Slett bruker");
    }

    private void SetActiveTab(string tab)
    {
        activeTab = tab;
        StateHasChanged();
    }

    private void TogglePasswordEditMode()
    {
        _editPasswordMode = !_editPasswordMode;
        StateHasChanged();
    }

    private void OnPasswordResetDone()
    {
        ToggleEditMode();
    }
}
